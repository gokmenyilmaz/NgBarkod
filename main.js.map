{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0C;AACK;;;;;;ICM/C,6EACE;IAAA,sEACE;IAAA,wEAAO;IAAA,iEAAM;IAAA,4DAAQ;IACrB,yEAAQ;IAAA,uDAAoB;IAAA,4DAAS;IACvC,4DAAM;IACN,4EAAiC;IAAxB,sTAAuB;IAAC,iEAAO;IAAA,4DAAS;IACnD,4DAAU;;;IAHE,0DAAoB;IAApB,sFAAoB;;ADDzB,MAAM,YAAY;IAUvB;QATA,iBAAY,GAAG,EAAE,CAAC;QAElB,mBAAc,GAAoB;YAChC,4DAAa,CAAC,QAAQ;YACtB,4DAAa,CAAC,WAAW;YACzB,4DAAa,CAAC,MAAM;YACpB,4DAAa,CAAC,OAAO;SACtB,CAAC;IAEa,CAAC;IAIhB,WAAW;QACT,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;IAC7B,CAAC;IAED,YAAY,CAAC,YAAoB;QAE/B,KAAK,CAAC,YAAY,CAAC,CAAC;IAEtB,CAAC;;wEAtBU,YAAY;4FAAZ,YAAY;QCTzB,oEAGA;QAAA,oEAAG;QAAA,oGAA+B;QAAA,4DAAI;QAEtC,mFAAgG;QAArD,6JAAe,wBAAoB,IAAC;QAAC,4DAAgB;QAEhG,gHACE;;QAHa,0DAA0B;QAA1B,uFAA0B;QAEhB,0DAAsB;QAAtB,oFAAsB;;6FDElC,YAAY;cANxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;aACnC;;;;;;;;;;;;;;AEPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AAEM;AACS;;AAajD,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAHT,EAAE,YAJJ;YACP,uEAAa;YACb,qEAAkB;SACnB;mIAIU,SAAS,mBATlB,2DAAY,aAGZ,uEAAa;QACb,qEAAkB;6FAKT,SAAS;cAXrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;iBACb;gBACD,OAAO,EAAE;oBACP,uEAAa;oBACb,qEAAkB;iBACnB;gBACD,SAAS,EAAE,EAAE;gBACb,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;AChBD;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\nimport { BarcodeFormat } from '@zxing/library';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent{\n  errorMessage = '';\n\n  formatsEnabled: BarcodeFormat[] = [\n    BarcodeFormat.CODE_128,\n    BarcodeFormat.DATA_MATRIX,\n    BarcodeFormat.EAN_13,\n    BarcodeFormat.QR_CODE,\n  ];\n\n  constructor() {}\n\n  qrResultString: string;\n\n  clearResult(): void {\n    this.qrResultString = null;\n  }\n\n  onCodeResult(resultString: string) {\n\n    alert(resultString);\n   \n  }\n\n\n}\n","app work\n\n\n<p>Barkod Okutulmuş Onaylı Stoklar</p>\n\n<zxing-scanner [formats]=\"formatsEnabled\"  (scanSuccess)=\"onCodeResult($event)\"></zxing-scanner>\n\n<section class=\"results\" *ngIf=\"qrResultString\">\n  <div>\n    <small>Result</small>\n    <strong>{{ qrResultString }}</strong>\n  </div>\n  <button  (click)=\"clearResult()\">&times;</button>\n</section>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { ZXingScannerModule } from '@zxing/ngx-scanner';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    ZXingScannerModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}